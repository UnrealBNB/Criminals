version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: criminals-app
    restart: unless-stopped
    working_dir: /var/www
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    networks:
      - criminals-network
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-criminals}
      - DB_USERNAME=${DB_USERNAME:-criminals}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
  db:
    image: mysql:8.0
    container_name: criminals-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-criminals}
      MYSQL_USER: ${DB_USERNAME:-criminals_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootsecret}
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - criminals-network

  nginx:
    image: nginx:alpine
    container_name: criminals-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - criminals-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: criminals-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME:-criminals_user}
      PMA_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - criminals-network

networks:
  criminals-network:
    driver: bridge

volumes:
  dbdata:
    driver: local